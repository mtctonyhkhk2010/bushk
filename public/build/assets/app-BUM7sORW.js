navigator.permissions.query({name:"geolocation"}).then(e=>{e.state==="granted"?window.watch_position_id=navigator.geolocation.watchPosition(r=>{window.coords=r.coords;const o=new CustomEvent("position-updated");document.dispatchEvent(o)}):(console.log("Browser location services disabled",navigator),navigator.geolocation.getCurrentPosition(()=>{}))},()=>{console.log("Browser permissions services unavailable",navigator)});window.fetchEta=async(e,r,o=null,p=null,g=null,l=null,u=null,m=null,i=null,v=!1)=>{let n,f={},d=[];e==="kmb"&&(n=`https://data.etabus.gov.hk/v1/transport/kmb/eta/${r}/${o}/${p}`),e==="ctb"&&(n=`https://rt.data.gov.hk//v2/transport/citybus/eta/CTB/${r}/${o}`),e==="gmb"&&(n=`https://data.etagmb.gov.hk/eta/route-stop/${g}/${r}`),e==="lrtfeeder"&&(n="https://rt.data.gov.hk/v1/transport/mtr/bus/getSchedule",f.headers={"Content-Type":"application/json"},f.method="POST",f.body=JSON.stringify({routeName:o,language:"zh"})),e==="nlb"&&(n="https://rt.data.gov.hk/v1/transport/nlb/stop.php?action=estimatedArrivals",f.method="POST",f.body=JSON.stringify({routeId:u,stopId:r,language:"zh"})),e==="lightRail"&&(n=`https://rt.data.gov.hk/v1/transport/mtr/lrt/getSchedule?station_id=${r.substring(2)}`),e==="mtr"&&(n=`https://rt.data.gov.hk/v1/transport/mtr/getSchedule.php?line=${o}&sta=${r}`);const c=await(await fetch(n,f)).json();if((e==="kmb"||e==="ctb")&&c.data.forEach(t=>{t.eta===""||t.eta===null||t.dir!==l||v&&t.seq!==i+1||d.push({timestamp:Date.parse(t.eta),eta:t.eta,co:t.co,remark:t.rmk_tc})}),e==="gmb"&&c.data.forEach(t=>{l==="I"&&t.route_seq===1||l==="O"&&t.route_seq===2||t.eta.forEach(a=>{a.timestamp===""||a.timestamp===null||d.push({timestamp:Date.parse(a.timestamp),eta:a.timestamp,co:"gmb",remark:a.remarks_tc})})}),e==="nlb"&&c.estimatedArrivals.forEach(t=>{t.estimatedArrivalTime===""||t.estimatedArrivalTime===null||d.push({timestamp:Date.parse(t.estimatedArrivalTime),eta:t.estimatedArrivalTime,co:"nlb",remark:""})}),e==="lrtfeeder"&&c.busStop.forEach(t=>{t.busStopId===r&&t.bus.forEach(a=>{let s=new Date;const h=a.departureTimeInSecond*1e3;s=new Date(s.getTime()+h),d.push({timestamp:s.getTime(),eta:s.toISOString(),co:"lrtfeeder",remark:""})})}),e==="lightRail"&&c.platform_list.forEach(t=>{t.route_list.forEach(a=>{if(a.route_no!==o||a.dest_ch!==m)return;let s=new Date;const h=/\d/.test(a.time_en)?a.time_en.match(/\d+/)[0]*6e4:0;s=new Date(s.getTime()+h),d.push({timestamp:s.getTime(),eta:s.toISOString(),co:"lightRail",remark:"",plat:a.plat})})}),e==="mtr")for(const t in c.data){const a=c.data[t];l=l.split("-")[l.split("-").length-1];const s=l==="DT"?"DOWN":"UP";a.hasOwnProperty(s)&&a[s].forEach(h=>{d.push({timestamp:Date.parse(h.time),eta:h.time,co:"mtr",remark:"",dest:h.dest,plat:h.plat})})}return d};window.distance=(e,r,o,p)=>{if(e===o&&r===p)return 0;{let g=Math.PI*e/180,l=Math.PI*o/180,u=r-p,m=Math.PI*u/180,i=Math.sin(g)*Math.sin(l)+Math.cos(g)*Math.cos(l)*Math.cos(m);return i>1&&(i=1),i=Math.acos(i),i=i*180/Math.PI,i=i*60*1.1515,i*1.609344}};
